import{key,app_name}from"../src/config.min.js";import{initStorage,getStorage}from"../src/storage.min.js";import{initMenu}from"../src/menu.min.js";import{generateRandomPass}from"../src/aes.min.js";function init(){initStorage(key,handleChangeStorage),initMenu(document.body,app_name,"Header ekleyiniz...","Header OluÅŸtur","headers",{value:""},(()=>{}),(()=>generateRandomPass(20))),handleChangeStorage()}function handleChangeStorage(){updateRules()}async function updateRules(){let e=await getStorage();e=e.headers??{};const t=Object.entries(e).map((([e,t])=>({header:e,operation:"set",value:t.value}))),a=0==t.length?[]:[{id:1,priority:1,condition:{resourceTypes:["main_frame","sub_frame","stylesheet","script","image","font","object","xmlhttprequest","ping","csp_report","media","websocket","webtransport","webbundle","other"]},action:{type:"modifyHeaders",requestHeaders:t}}];chrome.declarativeNetRequest.getDynamicRules((e=>{const t=e.map((e=>e.id));chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:t,addRules:a})}))}init();